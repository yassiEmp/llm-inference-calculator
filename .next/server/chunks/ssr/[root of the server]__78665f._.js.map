{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,iKAAc,IAAI;AAE/B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,iKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/slider.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,sMAAM,UAAU,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;0BAET,8OAAC,mKAAgB,KAAK;gBAAC,WAAU;0BAC/B,cAAA,8OAAC,mKAAgB,KAAK;oBAAC,WAAU;;;;;;;;;;;0BAEnC,8OAAC,mKAAgB,KAAK;gBAAC,WAAU;;;;;;;;;;;;AAGrC,OAAO,WAAW,GAAG,mKAAgB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,sMAAM,UAAU,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAiB,IAAI;QACpB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,mKAAiB,KAAK;YACrB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,mKAAiB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,qKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qKAAkB,SAAS;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,qKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,sMAAM,UAAU,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 609, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/chart.tsx"],"sourcesContent":["import {\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LineChart as RechartsLineChart,\n  BarChart as RechartsBarChart,\n  Line,\n  Bar,\n  ResponsiveContainer,\n} from \"recharts\"\n\ninterface ChartProps {\n  data: any[]\n  index: string\n  categories: string[]\n  colors: string[]\n  valueFormatter?: (value: number) => string\n  yAxisWidth?: number\n}\n\nexport function LineChart({ data, index, categories, colors, valueFormatter, yAxisWidth }: ChartProps) {\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RechartsLineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey={index} />\n        <YAxis width={yAxisWidth} tickFormatter={valueFormatter} />\n        <Tooltip formatter={valueFormatter ? (value) => [valueFormatter(value as number)] : undefined} />\n        <Legend />\n        {categories.map((category, i) => (\n          <Line\n            key={category}\n            type=\"monotone\"\n            dataKey={category}\n            stroke={colors[i % colors.length]}\n            activeDot={{ r: 8 }}\n          />\n        ))}\n      </RechartsLineChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport function BarChart({ data, index, categories, colors, valueFormatter, yAxisWidth }: ChartProps) {\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <RechartsBarChart data={data} margin={{ top: 15, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey={index} />\n        <YAxis width={yAxisWidth} tickFormatter={valueFormatter} />\n        <Tooltip formatter={valueFormatter ? (value) => [valueFormatter(value as number)] : undefined} />\n        <Legend />\n        {categories.map((category, i) => (\n          <Bar key={category} dataKey={category} fill={colors[i % colors.length]} />\n        ))}\n      </RechartsBarChart>\n    </ResponsiveContainer>\n  )\n}\n\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAsBO,SAAS,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,cAAc,EAAE,UAAU,EAAc;IACnG,qBACE,8OAAC,mKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAO;kBACvC,cAAA,8OAAC,qJAAA,CAAA,YAAiB;YAAC,MAAM;YAAM,QAAQ;gBAAE,KAAK;gBAAG,OAAO;gBAAI,MAAM;gBAAI,QAAQ;YAAE;;8BAC9E,8OAAC,6JAAA,CAAA,gBAAa;oBAAC,iBAAgB;;;;;;8BAC/B,8OAAC,qJAAA,CAAA,QAAK;oBAAC,SAAS;;;;;;8BAChB,8OAAC,qJAAA,CAAA,QAAK;oBAAC,OAAO;oBAAY,eAAe;;;;;;8BACzC,8OAAC,uJAAA,CAAA,UAAO;oBAAC,WAAW,iBAAiB,CAAC,QAAU;4BAAC,eAAe;yBAAiB,GAAG;;;;;;8BACpF,8OAAC,sJAAA,CAAA,SAAM;;;;;gBACN,WAAW,GAAG,CAAC,CAAC,UAAU,kBACzB,8OAAC,oJAAA,CAAA,OAAI;wBAEH,MAAK;wBACL,SAAS;wBACT,QAAQ,MAAM,CAAC,IAAI,OAAO,MAAM,CAAC;wBACjC,WAAW;4BAAE,GAAG;wBAAE;uBAJb;;;;;;;;;;;;;;;;AAUjB;AAEO,SAAS,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,cAAc,EAAE,UAAU,EAAc;IAClG,qBACE,8OAAC,mKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAO;kBACvC,cAAA,8OAAC,oJAAA,CAAA,WAAgB;YAAC,MAAM;YAAM,QAAQ;gBAAE,KAAK;gBAAI,OAAO;gBAAI,MAAM;gBAAI,QAAQ;YAAE;;8BAC9E,8OAAC,6JAAA,CAAA,gBAAa;oBAAC,iBAAgB;;;;;;8BAC/B,8OAAC,qJAAA,CAAA,QAAK;oBAAC,SAAS;;;;;;8BAChB,8OAAC,qJAAA,CAAA,QAAK;oBAAC,OAAO;oBAAY,eAAe;;;;;;8BACzC,8OAAC,uJAAA,CAAA,UAAO;oBAAC,WAAW,iBAAiB,CAAC,QAAU;4BAAC,eAAe;yBAAiB,GAAG;;;;;;8BACpF,8OAAC,sJAAA,CAAA,SAAM;;;;;gBACN,WAAW,GAAG,CAAC,CAAC,UAAU,kBACzB,8OAAC,mJAAA,CAAA,MAAG;wBAAgB,SAAS;wBAAU,MAAM,MAAM,CAAC,IAAI,OAAO,MAAM,CAAC;uBAA5D;;;;;;;;;;;;;;;;AAKpB"}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/results-display.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { AlertCircle, CheckCircle2 } from \"lucide-react\";\nimport { BarChart } from \"@/components/ui/chart\";\n\ninterface ResultsDisplayProps {\n  vramRequired: number;\n  systemRAMRequired: number;\n  diskSpace: number;\n  gpusNeeded: number;\n  inferenceSpeed: number;\n  gpuModel: string;\n  unifiedMemory: boolean;\n  systemRAM: number;\n}\n\nexport function ResultsDisplay({\n  vramRequired,\n  systemRAMRequired,\n  diskSpace,\n  gpusNeeded,\n  inferenceSpeed,\n  gpuModel,\n  unifiedMemory,\n  systemRAM,\n}: ResultsDisplayProps) {\n  // GPU VRAM sizes for reference\n  const gpuVramSizes: Record<string, number> = {\n    rtx3090: 24,\n    rtx4090: 24,\n    a100_40gb: 40,\n    a100_80gb: 80,\n    h100: 80,\n    rtx3080: 10,\n    rtx4080: 16,\n    rtx3070: 8,\n    rtx4070: 12,\n    a10: 24,\n    l4: 24,\n    a30: 24,\n    a40: 48,\n  };\n\n  const selectedGpuVram = gpuVramSizes[gpuModel] || 24;\n  const vramPercentage = unifiedMemory\n    ? (vramRequired / (systemRAM * 0.75)) * 100\n    : (vramRequired / selectedGpuVram) * 100;\n\n  const isVramSufficient = unifiedMemory\n    ? vramRequired <= systemRAM * 0.75\n    : vramRequired <= selectedGpuVram;\n\n  const gpuModelNames: Record<string, string> = {\n    rtx3090: \"NVIDIA RTX 3090\",\n    rtx4090: \"NVIDIA RTX 4090\",\n    a100_40gb: \"NVIDIA A100 (40GB)\",\n    a100_80gb: \"NVIDIA A100 (80GB)\",\n    h100: \"NVIDIA H100\",\n    rtx3080: \"NVIDIA RTX 3080\",\n    rtx4080: \"NVIDIA RTX 4080\",\n    rtx3070: \"NVIDIA RTX 3070\",\n    rtx4070: \"NVIDIA RTX 4070\",\n    a10: \"NVIDIA A10\",\n    l4: \"NVIDIA L4\",\n    a30: \"NVIDIA A30\",\n    a40: \"NVIDIA A40\",\n  };\n\n  const selectedGpuName = gpuModelNames[gpuModel] || gpuModel;\n\n  // Chart data for memory requirements\n  const chartData = [\n    {\n      name: \"VRAM\",\n      value: Number.parseFloat(vramRequired.toFixed(2)),\n    },\n    {\n      name: \"System RAM\",\n      value: Number.parseFloat(systemRAMRequired.toFixed(2)),\n    },\n    {\n      name: \"Disk Space\",\n      value: Number.parseFloat(diskSpace.toFixed(2)),\n    },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <Card>\n          <CardContent className=\"pt-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">\n              Hardware Requirements\n            </h3>\n\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm\">VRAM Required:</span>\n                  <span className=\"text-sm font-medium\">\n                    {vramRequired.toFixed(2)} GB\n                  </span>\n                </div>\n                <Progress\n                  value={Math.min(vramPercentage, 100)}\n                  className=\"h-2\"\n                />\n                <div className=\"flex justify-between text-xs text-muted-foreground\">\n                  <span>0 GB</span>\n                  <span>\n                    {unifiedMemory\n                      ? `${(systemRAM * 0.75).toFixed(1)} GB (75% of RAM)`\n                      : `${selectedGpuVram} GB (${selectedGpuName})`}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"space-y-1\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm\">System RAM Required:</span>\n                  <span className=\"text-sm font-medium\">\n                    {systemRAMRequired.toFixed(2)} GB\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"space-y-1\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm\">Disk Space Required:</span>\n                  <span className=\"text-sm font-medium\">\n                    {diskSpace.toFixed(2)} GB\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"space-y-1\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm\">GPUs Needed:</span>\n                  <span className=\"text-sm font-medium\">{gpusNeeded}</span>\n                </div>\n              </div>\n\n              <div className=\"space-y-1\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm\">Estimated Inference Speed:</span>\n                  <span className=\"text-sm font-medium\">\n                    {inferenceSpeed.toFixed(1)} tokens/sec\n                  </span>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">\n              Memory Requirements (GB)\n            </h3>\n            <div className=\" min-h-fit h-80 overflow-visible\">\n              <BarChart\n                data={chartData}\n                index=\"name\"\n                categories={[\"value\"]}\n                colors={[\"blue\"]}\n                valueFormatter={(value) => `${value} GB`}\n                yAxisWidth={40}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Alert variant={isVramSufficient ? \"default\" : \"destructive\"}>\n        {isVramSufficient ? (\n          <CheckCircle2 className=\"h-4 w-4\" />\n        ) : (\n          <AlertCircle className=\"h-4 w-4\" />\n        )}\n        <AlertTitle>\n          {isVramSufficient ? \"Configuration is viable\" : \"Insufficient memory\"}\n        </AlertTitle>\n        <AlertDescription>\n          {isVramSufficient\n            ? `Your selected configuration should run on ${gpusNeeded} ${selectedGpuName} GPU(s).`\n            : `This model requires ${vramRequired.toFixed(2)} GB of VRAM, but ${\n                unifiedMemory\n                  ? `you only have ${(systemRAM * 0.75).toFixed(\n                      1\n                    )} GB available (75% of ${systemRAM} GB RAM)`\n                  : `a ${selectedGpuName} only has ${selectedGpuVram} GB`\n              }. Consider using ${gpusNeeded} GPUs, reducing model size, or using a more efficient quantization method.`}\n        </AlertDescription>\n      </Alert>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1186, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 1240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,kBAAkB,oKAAiB,QAAQ;AAEjD,MAAM,UAAU,oKAAiB,IAAI;AAErC,MAAM,iBAAiB,oKAAiB,OAAO;AAE/C,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,oKAAiB,MAAM;kBACtB,cAAA,8OAAC,oKAAiB,OAAO;YACvB,KAAK;YACL,YAAY;YACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qXACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,oKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 1282, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1288, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/model-presets.tsx"],"sourcesContent":["\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\n\ninterface ModelPreset {\n  name: string\n  parameters: number\n  defaultQuantization: string\n  defaultContext: number\n  description: string\n}\n\ninterface ModelPresetsProps {\n  onSelectPreset: (preset: ModelPreset) => void\n}\n\nexport function ModelPresets({ onSelectPreset }: ModelPresetsProps) {\n  const presets: ModelPreset[] = [\n    {\n      name: \"Llama 3 8B\",\n      parameters: 8,\n      defaultQuantization: \"fp16\",\n      defaultContext: 8192,\n      description: \"Meta's 8B parameter model, good for general tasks\",\n    },\n    {\n      name: \"Llama 3 70B\",\n      parameters: 70,\n      defaultQuantization: \"int8\",\n      defaultContext: 8192,\n      description: \"Meta's largest model, high performance but resource intensive\",\n    },\n    {\n      name: \"Mistral 7B\",\n      parameters: 7,\n      defaultQuantization: \"fp16\",\n      defaultContext: 8192,\n      description: \"Efficient 7B model with strong performance\",\n    },\n    {\n      name: \"Gemma 2B\",\n      parameters: 2,\n      defaultQuantization: \"fp16\",\n      defaultContext: 8192,\n      description: \"Google's lightweight model for resource-constrained environments\",\n    },\n    {\n      name: \"Gemma 7B\",\n      parameters: 7,\n      defaultQuantization: \"fp16\",\n      defaultContext: 8192,\n      description: \"Google's mid-sized model with good performance\",\n    },\n    {\n      name: \"Falcon 7B\",\n      parameters: 7,\n      defaultQuantization: \"fp16\",\n      defaultContext: 2048,\n      description: \"TII's 7B parameter model\",\n    },\n    {\n      name: \"GPT-J 6B\",\n      parameters: 6,\n      defaultQuantization: \"fp16\",\n      defaultContext: 2048,\n      description: \"EleutherAI's 6B parameter model\",\n    },\n    {\n      name: \"Mixtral 8x7B\",\n      parameters: 47, // Effective parameters for memory calculation\n      defaultQuantization: \"int8\",\n      defaultContext: 32768,\n      description: \"Mixture of experts model with 8 experts of 7B each\",\n    },\n  ]\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"text-sm font-medium\">Model Presets</label>\n      <div className=\"flex flex-wrap gap-2\">\n        <TooltipProvider>\n          {presets.map((preset) => (\n            <Tooltip key={preset.name}>\n              <TooltipTrigger asChild>\n                <Button variant=\"outline\" size=\"sm\" onClick={() => onSelectPreset(preset)}>\n                  {preset.name}\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p>{preset.description}</p>\n                <p className=\"text-xs mt-1\">\n                  {preset.parameters}B params, {preset.defaultContext} context length\n                </p>\n              </TooltipContent>\n            </Tooltip>\n          ))}\n        </TooltipProvider>\n      </div>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAiBO,SAAS,aAAa,EAAE,cAAc,EAAqB;IAChE,MAAM,UAAyB;QAC7B;YACE,MAAM;YACN,YAAY;YACZ,qBAAqB;YACrB,gBAAgB;YAChB,aAAa;QACf;QACA;YACE,MAAM;YACN,YAAY;YACZ,qBAAqB;YACrB,gBAAgB;YAChB,aAAa;QACf;QACA;YACE,MAAM;YACN,YAAY;YACZ,qBAAqB;YACrB,gBAAgB;YAChB,aAAa;QACf;QACA;YACE,MAAM;YACN,YAAY;YACZ,qBAAqB;YACrB,gBAAgB;YAChB,aAAa;QACf;QACA;YACE,MAAM;YACN,YAAY;YACZ,qBAAqB;YACrB,gBAAgB;YAChB,aAAa;QACf;QACA;YACE,MAAM;YACN,YAAY;YACZ,qBAAqB;YACrB,gBAAgB;YAChB,aAAa;QACf;QACA;YACE,MAAM;YACN,YAAY;YACZ,qBAAqB;YACrB,gBAAgB;YAChB,aAAa;QACf;QACA;YACE,MAAM;YACN,YAAY;YACZ,qBAAqB;YACrB,gBAAgB;YAChB,aAAa;QACf;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,WAAU;0BAAsB;;;;;;0BACvC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,4HAAA,CAAA,kBAAe;8BACb,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC,4HAAA,CAAA,UAAO;;8CACN,8OAAC,4HAAA,CAAA,iBAAc;oCAAC,OAAO;8CACrB,cAAA,8OAAC,2HAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAU,MAAK;wCAAK,SAAS,IAAM,eAAe;kDAC/D,OAAO,IAAI;;;;;;;;;;;8CAGhB,8OAAC,4HAAA,CAAA,iBAAc;;sDACb,8OAAC;sDAAG,OAAO,WAAW;;;;;;sDACtB,8OAAC;4CAAE,WAAU;;gDACV,OAAO,UAAU;gDAAC;gDAAW,OAAO,cAAc;gDAAC;;;;;;;;;;;;;;2BAT5C,OAAO,IAAI;;;;;;;;;;;;;;;;;;;;;AAkBrC"}},
    {"offset": {"line": 1441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1447, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/gpu-selector.tsx"],"sourcesContent":["\"use client\"\n\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\n\ninterface GPUSelectorProps {\n  value: string\n  onValueChange: (value: string) => void\n}\n\nexport function GPUSelector({ value, onValueChange }: GPUSelectorProps) {\n  return (\n    <Select value={value} onValueChange={onValueChange}>\n      <SelectTrigger>\n        <SelectValue placeholder=\"Select GPU model\" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectGroup>\n          <SelectLabel>NVIDIA GeForce RTX</SelectLabel>\n          <SelectItem value=\"rtx4090\">RTX 4090 (24GB)</SelectItem>\n          <SelectItem value=\"rtx3090\">RTX 3090 (24GB)</SelectItem>\n          <SelectItem value=\"rtx4080\">RTX 4080 (16GB)</SelectItem>\n          <SelectItem value=\"rtx3080\">RTX 3080 (10GB)</SelectItem>\n          <SelectItem value=\"rtx4070\">RTX 4070 (12GB)</SelectItem>\n          <SelectItem value=\"rtx3070\">RTX 3070 (8GB)</SelectItem>\n        </SelectGroup>\n        <SelectGroup>\n          <SelectLabel>NVIDIA Data Center</SelectLabel>\n          <SelectItem value=\"h100\">H100 (80GB)</SelectItem>\n          <SelectItem value=\"a100_80gb\">A100 (80GB)</SelectItem>\n          <SelectItem value=\"a100_40gb\">A100 (40GB)</SelectItem>\n          <SelectItem value=\"a40\">A40 (48GB)</SelectItem>\n          <SelectItem value=\"a30\">A30 (24GB)</SelectItem>\n          <SelectItem value=\"a10\">A10 (24GB)</SelectItem>\n          <SelectItem value=\"l4\">L4 (24GB)</SelectItem>\n        </SelectGroup>\n      </SelectContent>\n    </Select>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAiBO,SAAS,YAAY,EAAE,KAAK,EAAE,aAAa,EAAoB;IACpE,qBACE,8OAAC,2HAAA,CAAA,SAAM;QAAC,OAAO;QAAO,eAAe;;0BACnC,8OAAC,2HAAA,CAAA,gBAAa;0BACZ,cAAA,8OAAC,2HAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE3B,8OAAC,2HAAA,CAAA,gBAAa;;kCACZ,8OAAC,2HAAA,CAAA,cAAW;;0CACV,8OAAC,2HAAA,CAAA,cAAW;0CAAC;;;;;;0CACb,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAU;;;;;;0CAC5B,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAU;;;;;;0CAC5B,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAU;;;;;;0CAC5B,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAU;;;;;;0CAC5B,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAU;;;;;;0CAC5B,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAU;;;;;;;;;;;;kCAE9B,8OAAC,2HAAA,CAAA,cAAW;;0CACV,8OAAC,2HAAA,CAAA,cAAW;0CAAC;;;;;;0CACb,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAO;;;;;;0CACzB,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAY;;;;;;0CAC9B,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAY;;;;;;0CAC9B,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAM;;;;;;0CACxB,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAM;;;;;;0CACxB,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAM;;;;;;0CACxB,8OAAC,2HAAA,CAAA,aAAU;gCAAC,OAAM;0CAAK;;;;;;;;;;;;;;;;;;;;;;;;AAKjC"}},
    {"offset": {"line": 1622, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1628, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/quantization-comparison.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { BarChart } from \"@/components/ui/chart\";\n\ninterface QuantizationComparisonProps {\n  modelSize: number;\n  contextLength: number;\n  enableKVCache: boolean;\n  batchSize: number;\n}\n\nexport function QuantizationComparison({\n  modelSize,\n  contextLength,\n  enableKVCache,\n  batchSize,\n}: QuantizationComparisonProps) {\n  // Calculate VRAM requirements for different quantization methods\n  const calculateVram = (bytesPerParameter: number) => {\n    // Model size in bytes (parameters in billions)\n    const modelSizeBytes = modelSize * 1000000000 * bytesPerParameter;\n\n    // KV cache size calculation\n    let kvCacheSize = 0;\n    if (enableKVCache) {\n      // KV cache size depends on context length, batch size, and model dimensions\n      // This is a simplified approximation\n      const headDim = 128; // Typical value\n      const numHeads = Math.ceil((modelSize * 1000000000) / (4 * 768 * 768)); // Approximation\n      kvCacheSize = 2 * numHeads * headDim * contextLength * batchSize * 2; // 2 for K and V, 2 bytes for fp16\n    }\n\n    // Total VRAM required\n    const totalVramBytes = modelSizeBytes + kvCacheSize;\n    return totalVramBytes / (1024 * 1024 * 1024); // Convert to GB\n  };\n\n  const quantizationMethods = [\n    { name: \"FP32\", bytesPerParameter: 4 },\n    { name: \"FP16/BF16\", bytesPerParameter: 2 },\n    { name: \"INT8\", bytesPerParameter: 1 },\n    { name: \"INT4\", bytesPerParameter: 0.5 },\n    { name: \"GPTQ\", bytesPerParameter: 0.5 },\n  ];\n\n  const chartData = quantizationMethods.map((method) => ({\n    name: method.name,\n    VRAM: Number.parseFloat(calculateVram(method.bytesPerParameter).toFixed(2)),\n  }));\n\n  return (\n    <Card>\n      <CardContent className=\"pt-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">\n          Quantization Method Comparison\n        </h3>\n        <p className=\"text-sm text-muted-foreground mb-4\">\n          This chart shows the estimated VRAM requirements for different\n          quantization methods with your current model configuration (\n          {modelSize}B parameters, {contextLength} context length).\n        </p>\n\n        <div className=\"h-80\">\n          <BarChart\n            data={chartData}\n            index=\"name\"\n            categories={[\"VRAM\"]}\n            colors={[\"blue\"]}\n            valueFormatter={(value) => `${value} GB`}\n            yAxisWidth={48}\n          />\n        </div>\n\n        <div className=\"mt-4 space-y-2\">\n          <h4 className=\"text-sm font-medium\">\n            Quantization Method Comparison\n          </h4>\n          <ul className=\"text-sm space-y-1\">\n            <li>\n              <strong>FP32:</strong> Full precision (4 bytes per parameter) -\n              Highest accuracy, highest memory usage\n            </li>\n            <li>\n              <strong>FP16/BF16:</strong> Half precision (2 bytes per parameter)\n              - Good balance of accuracy and memory\n            </li>\n            <li>\n              <strong>INT8:</strong> 8-bit quantization (1 byte per parameter) -\n              Reduced accuracy, significant memory savings\n            </li>\n            <li>\n              <strong>INT4:</strong> 4-bit quantization (0.5 bytes per\n              parameter) - Further reduced accuracy, maximum memory savings\n            </li>\n            <li>\n              <strong>GPTQ:</strong> Optimized quantization with varying\n              precision - Good accuracy with memory savings similar to INT4\n            </li>\n          </ul>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS,uBAAuB,EACrC,SAAS,EACT,aAAa,EACb,aAAa,EACb,SAAS,EACmB;IAC5B,iEAAiE;IACjE,MAAM,gBAAgB,CAAC;QACrB,+CAA+C;QAC/C,MAAM,iBAAiB,YAAY,aAAa;QAEhD,4BAA4B;QAC5B,IAAI,cAAc;QAClB,IAAI,eAAe;YACjB,4EAA4E;YAC5E,qCAAqC;YACrC,MAAM,UAAU,KAAK,gBAAgB;YACrC,MAAM,WAAW,KAAK,IAAI,CAAC,AAAC,YAAY,aAAc,CAAC,IAAI,MAAM,GAAG,IAAI,gBAAgB;YACxF,cAAc,IAAI,WAAW,UAAU,gBAAgB,YAAY,GAAG,kCAAkC;QAC1G;QAEA,sBAAsB;QACtB,MAAM,iBAAiB,iBAAiB;QACxC,OAAO,iBAAiB,CAAC,OAAO,OAAO,IAAI,GAAG,gBAAgB;IAChE;IAEA,MAAM,sBAAsB;QAC1B;YAAE,MAAM;YAAQ,mBAAmB;QAAE;QACrC;YAAE,MAAM;YAAa,mBAAmB;QAAE;QAC1C;YAAE,MAAM;YAAQ,mBAAmB;QAAE;QACrC;YAAE,MAAM;YAAQ,mBAAmB;QAAI;QACvC;YAAE,MAAM;YAAQ,mBAAmB;QAAI;KACxC;IAED,MAAM,YAAY,oBAAoB,GAAG,CAAC,CAAC,SAAW,CAAC;YACrD,MAAM,OAAO,IAAI;YACjB,MAAM,OAAO,UAAU,CAAC,cAAc,OAAO,iBAAiB,EAAE,OAAO,CAAC;QAC1E,CAAC;IAED,qBACE,8OAAC,yHAAA,CAAA,OAAI;kBACH,cAAA,8OAAC,yHAAA,CAAA,cAAW;YAAC,WAAU;;8BACrB,8OAAC;oBAAG,WAAU;8BAA6B;;;;;;8BAG3C,8OAAC;oBAAE,WAAU;;wBAAqC;wBAG/C;wBAAU;wBAAe;wBAAc;;;;;;;8BAG1C,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,0HAAA,CAAA,WAAQ;wBACP,MAAM;wBACN,OAAM;wBACN,YAAY;4BAAC;yBAAO;wBACpB,QAAQ;4BAAC;yBAAO;wBAChB,gBAAgB,CAAC,QAAU,GAAG,MAAM,GAAG,CAAC;wBACxC,YAAY;;;;;;;;;;;8BAIhB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAsB;;;;;;sCAGpC,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC;;sDACC,8OAAC;sDAAO;;;;;;wCAAc;;;;;;;8CAGxB,8OAAC;;sDACC,8OAAC;sDAAO;;;;;;wCAAmB;;;;;;;8CAG7B,8OAAC;;sDACC,8OAAC;sDAAO;;;;;;wCAAc;;;;;;;8CAGxB,8OAAC;;sDACC,8OAAC;sDAAO;;;;;;wCAAc;;;;;;;8CAGxB,8OAAC;;sDACC,8OAAC;sDAAO;;;;;;wCAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpC"}},
    {"offset": {"line": 1849, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1855, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/inference-speed-estimator.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { LineChart } from \"@/components/ui/chart\"\n\ninterface InferenceSpeedEstimatorProps {\n  modelSize: number\n  quantizationMethod: string\n  gpuModel: string\n  gpusNeeded: number\n  inferenceSpeed: number\n}\n\nexport function InferenceSpeedEstimator({\n  modelSize,\n  quantizationMethod,\n  gpuModel,\n  gpusNeeded,\n  inferenceSpeed,\n}: InferenceSpeedEstimatorProps) {\n  // GPU speed factors for reference\n  const gpuSpeedFactors: Record<string, number> = {\n    rtx3090: 1.0,\n    rtx4090: 1.8,\n    a100_40gb: 1.5,\n    a100_80gb: 1.6,\n    h100: 2.5,\n    rtx3080: 0.7,\n    rtx4080: 1.2,\n    rtx3070: 0.5,\n    rtx4070: 0.8,\n    a10: 0.9,\n    l4: 0.9,\n    a30: 1.1,\n    a40: 1.3,\n  }\n\n  // Quantization speed factors\n  const quantizationSpeedFactors: Record<string, number> = {\n    fp32: 0.5,\n    fp16: 1.0,\n    bf16: 1.0,\n    int8: 1.5,\n    int4: 2.0,\n    gptq: 1.8,\n  }\n\n  // GPU model names for display\n  const gpuModelNames: Record<string, string> = {\n    rtx3090: \"NVIDIA RTX 3090\",\n    rtx4090: \"NVIDIA RTX 4090\",\n    a100_40gb: \"NVIDIA A100 (40GB)\",\n    a100_80gb: \"NVIDIA A100 (80GB)\",\n    h100: \"NVIDIA H100\",\n    rtx3080: \"NVIDIA RTX 3080\",\n    rtx4080: \"NVIDIA RTX 4080\",\n    rtx3070: \"NVIDIA RTX 3070\",\n    rtx4070: \"NVIDIA RTX 4070\",\n    a10: \"NVIDIA A10\",\n    l4: \"NVIDIA L4\",\n    a30: \"NVIDIA A30\",\n    a40: \"NVIDIA A40\",\n  }\n\n  const selectedGpuName = gpuModelNames[gpuModel] || gpuModel\n\n  // Generate data for different batch sizes\n  const batchSizes = [1, 2, 4, 8, 16, 32]\n  const chartData = batchSizes.map((batchSize) => {\n    // Base calculation similar to the one in the main calculator\n    const speedFactor = gpuSpeedFactors[gpuModel] || 1.0\n    const quantFactor = quantizationSpeedFactors[quantizationMethod] || 1.0\n    const baseSpeed = 30 // Base tokens per second for a 7B model on RTX 3090 with FP16\n    const modelSizeFactor = 7 / modelSize // Smaller models are faster\n\n    // Batch size doesn't scale linearly with performance\n    // There's usually diminishing returns\n    const batchSizeFactor = Math.log2(batchSize) / Math.log2(4) + 0.5\n\n    const speed = baseSpeed * speedFactor * quantFactor * modelSizeFactor * gpusNeeded * batchSizeFactor\n\n    return {\n      batchSize: batchSize.toString(),\n      speed: Number.parseFloat(speed.toFixed(1)),\n    }\n  })\n\n  // Calculate time to generate 1000 tokens\n  const timeFor1000Tokens = 1000 / inferenceSpeed\n\n  // Calculate tokens per minute\n  const tokensPerMinute = inferenceSpeed * 60\n\n  return (\n    <Card>\n      <CardContent className=\"pt-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Inference Speed Estimation</h3>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <p className=\"text-sm text-muted-foreground mb-4\">\n              Estimated inference speed with your current configuration:\n            </p>\n\n            <div className=\"space-y-4\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Tokens per second:</span>\n                <span className=\"text-lg font-medium\">{inferenceSpeed.toFixed(1)}</span>\n              </div>\n\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Tokens per minute:</span>\n                <span className=\"text-lg font-medium\">{tokensPerMinute.toFixed(0)}</span>\n              </div>\n\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Time to generate 1000 tokens:</span>\n                <span className=\"text-lg font-medium\">{timeFor1000Tokens.toFixed(1)} seconds</span>\n              </div>\n\n              <div className=\"mt-6\">\n                <h4 className=\"text-sm font-medium mb-2\">Performance Factors</h4>\n                <ul className=\"text-sm space-y-1\">\n                  <li>\n                    <strong>GPU:</strong> {selectedGpuName} (Speed factor:{\" \"}\n                    {gpuSpeedFactors[gpuModel]?.toFixed(1) || \"1.0\"}x)\n                  </li>\n                  <li>\n                    <strong>Quantization:</strong> {quantizationMethod.toUpperCase()} (Speed factor:{\" \"}\n                    {quantizationSpeedFactors[quantizationMethod]?.toFixed(1) || \"1.0\"}x)\n                  </li>\n                  <li>\n                    <strong>Model Size:</strong> {modelSize}B parameters (Smaller models are faster)\n                  </li>\n                  <li>\n                    <strong>GPUs:</strong> {gpusNeeded} (Performance scales with multiple GPUs)\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <p className=\"text-sm text-muted-foreground mb-4\">Estimated performance with different batch sizes:</p>\n\n            <div className=\"h-64\">\n              <LineChart\n                data={chartData}\n                index=\"batchSize\"\n                categories={[\"speed\"]}\n                colors={[\"blue\"]}\n                valueFormatter={(value) => `${value} tokens/sec`}\n                yAxisWidth={48}\n              />\n            </div>\n\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              Note: These are approximations based on typical performance patterns. Actual performance may vary based on\n              specific hardware, drivers, and implementation details.\n            </p>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2231, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/calculator.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Label } from \"@/components/ui/label\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { ResultsDisplay } from \"@/components/results-display\";\nimport { ModelPresets } from \"@/components/model-presets\";\nimport { GPUSelector } from \"@/components/gpu-selector\";\nimport { QuantizationComparison } from \"@/components/quantization-comparison\";\nimport { InferenceSpeedEstimator } from \"@/components/inference-speed-estimator\";\n\nexport function Calculator() {\n  // Model parameters\n  const [modelSize, setModelSize] = useState(7);\n  const [contextLength, setContextLength] = useState(4096);\n  const [quantizationMethod, setQuantizationMethod] = useState(\"fp16\");\n  const [enableKVCache, setEnableKVCache] = useState(true);\n  const [batchSize, setBatchSize] = useState(1);\n\n  // Hardware parameters\n  const [gpuModel, setGpuModel] = useState(\"rtx4090\");\n  const [systemRAM, setSystemRAM] = useState(32);\n  const [unifiedMemory, setUnifiedMemory] = useState(false);\n\n  // Calculation results\n  const [vramRequired, setVramRequired] = useState(0);\n  const [systemRAMRequired, setSystemRAMRequired] = useState(0);\n  const [diskSpace, setDiskSpace] = useState(0);\n  const [gpusNeeded, setGpusNeeded] = useState(1);\n  const [inferenceSpeed, setInferenceSpeed] = useState(0);\n\n  // Calculate requirements whenever inputs change\n  useEffect(() => {\n    calculateRequirements();\n  }, [\n    modelSize,\n    contextLength,\n    quantizationMethod,\n    enableKVCache,\n    batchSize,\n    gpuModel,\n    systemRAM,\n    unifiedMemory,\n  ]);\n\n  // Apply model preset\n  const applyModelPreset = (preset: {\n    name: string;\n    parameters: number;\n    defaultQuantization: string;\n    defaultContext: number;\n  }) => {\n    setModelSize(preset.parameters);\n    setQuantizationMethod(preset.defaultQuantization);\n    setContextLength(preset.defaultContext);\n  };\n\n  // Calculate hardware requirements\n  const calculateRequirements = () => {\n    // Get bytes per parameter based on quantization method\n    const bytesPerParameter =\n      {\n        fp32: 4,\n        fp16: 2,\n        bf16: 2,\n        int8: 1,\n        int4: 0.5,\n        gptq: 0.5, // Approximation\n      }[quantizationMethod] || 2;\n\n    // Model size in bytes (parameters in billions)\n    const modelSizeBytes = modelSize * 1000000000 * bytesPerParameter;\n\n    // KV cache size calculation\n    let kvCacheSize = 0;\n    if (enableKVCache) {\n      // KV cache size depends on context length, batch size, and model dimensions\n      // This is a simplified approximation\n      const headDim = 128; // Typical value\n      const numHeads = Math.ceil((modelSize * 1000000000) / (4 * 768 * 768)); // Approximation\n      kvCacheSize = 2 * numHeads * headDim * contextLength * batchSize * 2; // 2 for K and V, 2 bytes for fp16\n    }\n\n    // Total VRAM required\n    const totalVramBytes = modelSizeBytes + kvCacheSize;\n    const totalVramGB = totalVramBytes / (1024 * 1024 * 1024);\n    setVramRequired(totalVramGB);\n\n    // System RAM required (typically 2-3x the model size for overhead)\n    const ramRequired = totalVramGB * 1.5;\n    setSystemRAMRequired(ramRequired);\n\n    // Disk space required (model size plus overhead)\n    const diskSpaceGB =\n      ((modelSize * 1000000000 * bytesPerParameter) / (1024 * 1024 * 1024)) *\n      1.1;\n    setDiskSpace(diskSpaceGB);\n\n    // Number of GPUs needed\n    const gpuVramSizes = {\n      rtx3090: 24,\n      rtx4090: 24,\n      a100_40gb: 40,\n      a100_80gb: 80,\n      h100: 80,\n      rtx3080: 10,\n      rtx4080: 16,\n      rtx3070: 8,\n      rtx4070: 12,\n      a10: 24,\n      l4: 24,\n      a30: 24,\n      a40: 48,\n    };\n\n    const selectedGpuVram =\n      gpuVramSizes[gpuModel as keyof typeof gpuVramSizes] || 24;\n    const gpusNeededCalc = unifiedMemory\n      ? Math.ceil(totalVramGB / (systemRAM * 0.75))\n      : Math.ceil(totalVramGB / selectedGpuVram);\n\n    setGpusNeeded(gpusNeededCalc);\n\n    // Inference speed estimation (tokens per second)\n    // This is a very rough approximation based on model size and GPU\n    const gpuSpeedFactors = {\n      rtx3090: 1.0,\n      rtx4090: 1.8,\n      a100_40gb: 1.5,\n      a100_80gb: 1.6,\n      h100: 2.5,\n      rtx3080: 0.7,\n      rtx4080: 1.2,\n      rtx3070: 0.5,\n      rtx4070: 0.8,\n      a10: 0.9,\n      l4: 0.9,\n      a30: 1.1,\n      a40: 1.3,\n    };\n\n    const quantizationSpeedFactor =\n      {\n        fp32: 0.5,\n        fp16: 1.0,\n        bf16: 1.0,\n        int8: 1.5,\n        int4: 2.0,\n        gptq: 1.8,\n      }[quantizationMethod] || 1.0;\n\n    const speedFactor =\n      gpuSpeedFactors[gpuModel as keyof typeof gpuSpeedFactors] || 1.0;\n    const baseSpeed = 30; // Base tokens per second for a 7B model on RTX 3090 with FP16\n\n    const modelSizeFactor = 7 / modelSize; // Smaller models are faster\n    const inferenceSpeedCalc =\n      baseSpeed *\n      speedFactor *\n      quantizationSpeedFactor *\n      modelSizeFactor *\n      gpusNeededCalc;\n    setInferenceSpeed(inferenceSpeedCalc);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <Card>\n          <CardContent className=\"pt-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Model Configuration</h2>\n\n            <div className=\"space-y-6\">\n              <ModelPresets onSelectPreset={applyModelPreset} />\n\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <Label htmlFor=\"model-size\">\n                    Model Size (billions of parameters)\n                  </Label>\n                  <span className=\"text-sm font-medium\">{modelSize}B</span>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <Slider\n                    id=\"model-size\"\n                    min={0.1}\n                    max={70}\n                    step={0.1}\n                    value={[modelSize]}\n                    onValueChange={(value) => setModelSize(value[0])}\n                  />\n                  <Input\n                    type=\"number\"\n                    value={modelSize}\n                    onChange={(e) => setModelSize(Number(e.target.value))}\n                    className=\"w-20\"\n                    min={0.1}\n                    max={70}\n                    step={0.1}\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <Label htmlFor=\"context-length\">\n                    Context Length (tokens)\n                  </Label>\n                  <span className=\"text-sm font-medium\">{contextLength}</span>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <Slider\n                    id=\"context-length\"\n                    min={1024}\n                    max={128000}\n                    step={1024}\n                    value={[contextLength]}\n                    onValueChange={(value) => setContextLength(value[0])}\n                  />\n                  <Input\n                    type=\"number\"\n                    value={contextLength}\n                    onChange={(e) => setContextLength(Number(e.target.value))}\n                    className=\"w-24\"\n                    min={1024}\n                    max={128000}\n                    step={1024}\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"quantization\">Quantization Method</Label>\n                <Select\n                  value={quantizationMethod}\n                  onValueChange={setQuantizationMethod}\n                >\n                  <SelectTrigger id=\"quantization\">\n                    <SelectValue placeholder=\"Select quantization\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"fp32\">FP32 (32-bit float)</SelectItem>\n                    <SelectItem value=\"fp16\">FP16 (16-bit float)</SelectItem>\n                    <SelectItem value=\"bf16\">\n                      BF16 (16-bit brain float)\n                    </SelectItem>\n                    <SelectItem value=\"int8\">INT8 (8-bit integer)</SelectItem>\n                    <SelectItem value=\"int4\">INT4 (4-bit integer)</SelectItem>\n                    <SelectItem value=\"gptq\">\n                      GPTQ (optimized quantization)\n                    </SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"kv-cache\"\n                  checked={enableKVCache}\n                  onCheckedChange={setEnableKVCache}\n                />\n                <Label htmlFor=\"kv-cache\">Enable KV Cache</Label>\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <Label htmlFor=\"batch-size\">Batch Size</Label>\n                  <span className=\"text-sm font-medium\">{batchSize}</span>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <Slider\n                    id=\"batch-size\"\n                    min={1}\n                    max={32}\n                    step={1}\n                    value={[batchSize]}\n                    onValueChange={(value) => setBatchSize(value[0])}\n                  />\n                  <Input\n                    type=\"number\"\n                    value={batchSize}\n                    onChange={(e) => setBatchSize(Number(e.target.value))}\n                    className=\"w-16\"\n                    min={1}\n                    max={32}\n                    step={1}\n                  />\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"pt-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">\n              Hardware Configuration\n            </h2>\n\n            <div className=\"space-y-6\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"gpu-model\">GPU Model</Label>\n                <GPUSelector value={gpuModel} onValueChange={setGpuModel} />\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"unified-memory\"\n                  checked={unifiedMemory}\n                  onCheckedChange={setUnifiedMemory}\n                />\n                <Label htmlFor=\"unified-memory\">\n                  Unified Memory System (Apple Silicon, etc.)\n                </Label>\n              </div>\n\n              {unifiedMemory && (\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <Label htmlFor=\"system-ram\">System RAM (GB)</Label>\n                    <span className=\"text-sm font-medium\">{systemRAM} GB</span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Slider\n                      id=\"system-ram\"\n                      min={8}\n                      max={192}\n                      step={4}\n                      value={[systemRAM]}\n                      onValueChange={(value) => setSystemRAM(value[0])}\n                    />\n                    <Input\n                      type=\"number\"\n                      value={systemRAM}\n                      onChange={(e) => setSystemRAM(Number(e.target.value))}\n                      className=\"w-16\"\n                      min={8}\n                      max={192}\n                      step={4}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs defaultValue=\"results\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"results\">Results</TabsTrigger>\n          <TabsTrigger value=\"comparison\">Quantization Comparison</TabsTrigger>\n          <TabsTrigger value=\"inference\">Inference Speed</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"results\">\n          <ResultsDisplay\n            vramRequired={vramRequired}\n            systemRAMRequired={systemRAMRequired}\n            diskSpace={diskSpace}\n            gpusNeeded={gpusNeeded}\n            inferenceSpeed={inferenceSpeed}\n            gpuModel={gpuModel}\n            unifiedMemory={unifiedMemory}\n            systemRAM={systemRAM}\n          />\n        </TabsContent>\n        <TabsContent value=\"comparison\">\n          <QuantizationComparison\n            modelSize={modelSize}\n            contextLength={contextLength}\n            enableKVCache={enableKVCache}\n            batchSize={batchSize}\n          />\n        </TabsContent>\n        <TabsContent value=\"inference\">\n          <InferenceSpeedEstimator\n            modelSize={modelSize}\n            quantizationMethod={quantizationMethod}\n            gpuModel={gpuModel}\n            gpusNeeded={gpusNeeded}\n            inferenceSpeed={inferenceSpeed}\n          />\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3030, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3036, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yassi/Documents/work/llm-inference-calculator/components/theme-toggle.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Button } from \"@/components/ui/button\"\nimport { Moon, Sun } from \"lucide-react\"\n\nexport function ThemeToggle() {\n  const { theme, setTheme } = useTheme()\n\n  return (\n    <Button variant=\"ghost\" size=\"icon\" onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}>\n      <Sun className=\"h-5 w-5 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-5 w-5 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAJA;;;;;AAMO,SAAS;IACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEnC,qBACE,8OAAC,2HAAA,CAAA,SAAM;QAAC,SAAQ;QAAQ,MAAK;QAAO,SAAS,IAAM,SAAS,UAAU,SAAS,UAAU;;0BACvF,8OAAC,gMAAA,CAAA,MAAG;gBAAC,WAAU;;;;;;0BACf,8OAAC,kMAAA,CAAA,OAAI;gBAAC,WAAU;;;;;;0BAChB,8OAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAGhC"}},
    {"offset": {"line": 3085, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}